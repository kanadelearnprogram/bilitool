{
  "SESSDATA": "c34ca45f%2C1772002630%2C0c44c%2A81CjBusnfKEaC7NzJBjT8YF_09upA1HTLFZ6rH3vZ5QfiTK2nNJ8vF2ZxVRA4jW-JA3J8SVnQ4QllqZGlVcmRteEZRV0ZHRkhwcTRnME5sRDZiOWlDcTR1RUpiNzdEckJwazREV3QycEd5RkdVMlc3akpBamNHX1ZhUENPSXRSWVlHaWRZNVFSdHdBIIEC",
  "filepath": "E:\\tools\\dart",
  "sk": "sk-28322306872d47dbac84329fbf3afe09",
  "prompt": "\n视频字幕转新手友好型 CSDN 技术博客\n整体结构规范（Markdown 格式）\u200B\n使用# 主标题作为文章大标题，## 知识点标题区分核心内容模块（如## 系统调用）。\u200B\n禁止在##标题下嵌套多个###标题，每个核心知识点独占一个##标题。\u200B\n知识点标题间必须添加简短过渡句，明确逻辑联系（如依赖关系、时间顺序、问题 - 解决方案链等）。\u200B\n知识点展开模式（每个##标题下）\u200B\n核心问题\u200B\n从新手视角提出 1-3 个关键疑问（如 “为什么需要 XXX？”“XXX 具体是怎么工作的？”“不用 XXX 会怎样？”）。\u200B\n关键解析\u200B\n设计动机（Why）：清晰阐述该技术 / 设计要解决的核心问题及重要性。\u200B\n实现原理（How）：解释核心工作机制或关键步骤，力求具体，避免抽象。\u200B\n矫正与注意：若字幕内容有明显错误或模糊处，必须矫正或合理解释（如修复 “片远→片选” 这类口误，保留合理口语表达）。\u200B\n举个栗子\uD83C\uDF30\u200B\n提供简洁、典型的技术场景或代码片段示例，带真实参数(来源于字幕内容)（如芯片型号、地址范围），说明知识点应用。\u200B\n例如 1K×8 的存储芯片：\u200B\n数据线 D0-D7（传 8 位二进制数）\u200B\n地址线 A0-A9（10 根线对应 1024 个单元）\u200B\n\u200B\n理解加速器（隐喻）\u200B\n用统一、贯穿全文的隐喻体系(优先使用字幕中的隐喻)（如计算机比作 “宿舍楼”）进行口语化解释，像老师敲黑板强调重点，可适当用 “对吧？”“明白吧？” 等口头禅。\u200B\n比如地址线就像房间号，10 根地址线能对应 1024 个 “房间”，数据线则像快递柜，负责传递数据，懂了吧？\u200B\n流程图（可选但推荐）\u200B\n若知识点流程或关系复杂，用 ```mermaid 代码块绘制简洁的 graph TD 或 graph LR 流程图辅助说明（符合 Mainland 语法）。\u200B\n语言风格与内容处理\u200B\n面向新手：清晰耐心，避免晦涩术语堆砌，必要术语需简单解释。\u200B\n逻辑严密：各部分内部及知识点间衔接自然，论证有力。\u200B\n统一隐喻：全文使用同一核心隐喻体系，确保连贯性。\u200B\n内容处理：提炼深化字幕内容，挖掘设计思想与技术细节；去口语化和冗余，转化为精炼书面语；优先保证技术准确性，对疑点矫正或标注。\u200B\n格式与错误矫正补充\u200B\n段落间空一行，保持呼吸感，严格遵循 Markdown 格式，最多到三级标题（###）且不嵌套。\u200B\n知识点用加粗突出核心概念，控制在 1-2 句话说明本质；例子用>引用框展示具体场景。\n\n以下是字幕内容"
}
